---
import { twMerge } from 'tailwind-merge';

// [Components]
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import PortfolioCard from '~/components/ui/PortfolioCard.astro';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  projects = [],
  columns = 3,
  id,
  isDark = false,
  classes = {},
  containerClass = '',
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />

  <ul
    class={twMerge(
      `grid gap-8 gap-x-12 sm:gap-y-8 ${
        columns === 4
          ? 'lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2'
          : columns === 3
            ? 'lg:grid-cols-3 sm:grid-cols-2'
            : columns === 2
              ? 'sm:grid-cols-2 '
              : ''
      }`,
      containerClass
    )}
  >
    {
      projects &&
        projects.length > 0 &&
        projects.map((project) => (
          <PortfolioCard
            title={project.title}
            description={project.description}
            imagePath={project.imagePath}
            url={project.url}
          />
        ))
    }
  </ul>
</WidgetWrapper>

<style>
  a::after {
    content: '';
    width: 100%;
    height: 2px;
    background-color: var(--color-primary-blue);
    position: absolute;
    bottom: 0;
    left: 0;
    transform: scaleX(0); /* Initially hidden */
    transform-origin: center; /* Animates from left to right */
    transition: transform 0.3s ease-in-out; /* Smooth transition */
  }

  a:hover::after {
    transform: scaleX(1); /* Expands the underline */
  }
</style>
